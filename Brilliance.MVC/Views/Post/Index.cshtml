@{
    ViewData["Title"] = "Posts";
}

<main class="section">
    <div class="container">
        <h1 class="title-1">Posts</h1>
        <div class="card">
            <div class="input">
                <select class="input-select" id="categorySelect" required name="IdCategory"></select>
                <label class="input-label" for="IdCategory">Category</label>
            </div>
            <div class="input">
                <select class="input-select" id="sortSelect" required name="sort">
                    <option value="asc">Ascending</option>
                    <option value="desc" selected>Descending</option>
                </select>
                <label class="input-label" for="sort">Sorting</label>
            </div>
        </div>
        <ul class="projects"></ul>
        <div class="pagination">
            <div class="pagination-container">
                <button id="prevPageBtn" onclick="changePage(-1)" disabled></button>
                <span id="currentPage">1</span>
                <button id="nextPageBtn" onclick="changePage(1)"></button>
            </div>
        </div>

    </div>
</main>
@section scripts
{
    <script>
        $(document).ready(function () {
            var categorySelect = $('#categorySelect');
            var sortSelect = $('#sortSelect');

            categorySelect.change(function () {
                fetchPosts(currentPage, $(categorySelect).val(), $(sortSelect).val());
            });

            sortSelect.change(function () {
                fetchPosts(currentPage, $(categorySelect).val(), $(sortSelect).val());
            });

            $.ajax({
                url: 'http://localhost/api/v1/categories',
                method: 'GET',
                success: function (data) {
                    var selectElement = $('#categorySelect');
                    selectElement.append('<option value="null">All</option>');
                    for (var i = 0; i < data.length; i++) {
                        selectElement.append('<option value="' + data[i].id + '">' + data[i].name + '</option>');
                    }
                },
                error: function () {
                    console.error('Failed to load categories');
                }
            });
        });
    </script>
    <script>
        var currentPage = 1;
        var totalPages = 1;

        function fetchPosts(page, categoryId, sort) {
            categoryId = categoryId === "null" ? null : categoryId;
            console.log('Fetching posts for page:', page, 'categoryId:', categoryId, 'sort:', sort);
            if (page < 1 || page > totalPages) {
                return;
            }

            var apiUrl = `http://localhost/api/v1/posts?page=${page}&size=5&sort=${sort}`;
            if (categoryId) {
                apiUrl += `&categoryId=${categoryId}`;
            }

            fetch(apiUrl, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    var projectsList = document.querySelector('.projects');
                    projectsList.innerHTML = '';
                    if(!data.items || data.items.length === 0) {
                        var noPostsMessage = document.createElement('p');
                        noPostsMessage.textContent = 'No posts found.';
                        projectsList.appendChild(noPostsMessage);
                        return;
                    }
                    var userIsAdmin = "@User.IsInRole("Admin").ToString().ToLower()" === "true";
                    data.items.forEach(function (item) {
                        var projectItem = document.createElement('li');
                        projectItem.className = 'project';
                        var projectBlock = document.createElement('div');
                        projectBlock.classList.add('project-block');

                        var projectLink = document.createElement('a');
                        projectLink.href = '/post/details/' + item.id;
                        projectLink.innerHTML = '<h3 class="project__title">' + item.title + '</h3>';

                        projectBlock.appendChild(projectLink);

                        if (userIsAdmin) {
                            var deleteButton = document.createElement('button');
                            deleteButton.textContent = 'Delete';
                            deleteButton.classList.add('delete-button');

                            deleteButton.addEventListener('click', function () {
                                var postId = deleteButton.getAttribute('data-id');

                                deletePost(postId);

                                projectItem.remove();
                            });

                            deleteButton.setAttribute('data-id', item.id);

                            projectBlock.appendChild(deleteButton);
                        }

                        projectItem.appendChild(projectBlock);

                        projectsList.appendChild(projectItem);
                    });

                    document.getElementById('currentPage').textContent = page;

                    totalPages = data.items ? data.page.totalPages : 1;

                    document.getElementById('prevPageBtn').disabled = page === 1;
                    document.getElementById('nextPageBtn').disabled = data.totalPages === page;
                })
                .catch(error => {
                    console.error('There was a problem with the fetch operation:', error);
                });
        }

        function changePage(offset) {
            if (currentPage === totalPages)
            {
                currentPage = 1;
            }
            else {
                currentPage += offset;
            }
            fetchPosts(currentPage, $(categorySelect).val(), $(sortSelect).val());
        }

        document.addEventListener("DOMContentLoaded", function () {
            fetchPosts(currentPage, $(categorySelect).val(), $(sortSelect).val());
        });
    </script>
    <script>
        function deletePost(postId) {
            var deleteUrl = 'http://localhost/api/v1/posts/' + postId;

            var requestOptions = {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                },
            };

            fetch(deleteUrl, requestOptions)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                })
                .then(data => {
                    console.log('Post deleted successfully', data);
                })
                .catch(error => {
                    console.error('Error deleting post:', error);
                });
        }
    </script>
}